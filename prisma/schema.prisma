// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              String            @id @default(uuid())
  name            String
  age             Int
  email           String            @unique
  isAdmin         Boolean
  writtenPosts    posts[]           @relation("writtenPosts")
  favouredPosts   posts[]           @relation("favouredPosts")
  userPreferences user_preferences?

  @@index([email])
}

model user_preferences {
  id           String   @id @default(uuid())
  emailUpdates Boolean
  user         users    @relation(fields: [usersId], references: [id])
  usersId      String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model posts {
  id            String       @id @default(uuid())
  title         String
  averageRating Decimal
  author        users        @relation("writtenPosts", fields: [usersId], references: [id])
  usersId       String
  favouredBy    users?       @relation("favouredPosts", fields: [favouredById], references: [id])
  favouredById  String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  categories    categories[]
  caregoriesId  String?
}

model categories {
  id    String  @id @default(uuid())
  name  String  @unique
  posts posts[]
}
